Stop Combination Analysis

Goal of this analysis to take the results from the single lepton stop analysis
(SUS-13-011) and the razor all hadronic analysis (SUS-13-004) in order to
increase the sensitivity to exclude the production of stop pairs.

This README gives basic instructions on how to use this code.

1. checkout and compile
2. generating the stop baby class files.
3. create "interpretation" histogram 
4. create the single lepton card
5. create all the single lepton cards
5. create the combined stop cards
6. run the cards interactively
7. run the cards on the grid
8. extracting the limits from the grid output
8. creating exclusion plots

--------------------------------------------------------------------------------
1. Checkout and compile:
--------------------------------------------------------------------------------

scramv1 p -n CMSSW_6_1_2_stopcombo CMSSW CMSSW_6_1_2
cd CMSSW_6_1_2_stopcombo/src
cmsenv

Checkout the stop combination code:

git clone https://github.com/kelleyrw/StopCombination.git Analysis/StopCombination

Run the setup scripts:
bash Analysis/StopCombination/scripts/setup.sh

--------------------------------------------------------------------------------
1a. Generating the stop baby class files.
--------------------------------------------------------------------------------

This analysis uses the baby ntuples produced by Ben to create the efficiencies
and up/dn efficiencies used for the signal efficiency and systematic
uncertainties. For the looper over this baby to work, CMS2.h style class files
are generated and stored in STOP_BABY.h/cc. If you wish to use updated baby
ntuples, you will need to regenerate these files. A wrapper script is supplied
in the scripts directory called "stop_make_baby_class_files.sh".

To run:

./scripts/stop_make_baby_class_files.sh <stop baby ntuple> 

Then compile again:

scram b -j20

--------------------------------------------------------------------------------
2. Create "Interpretation" histogram 
--------------------------------------------------------------------------------

The "interpretation" histograms are all the histograms that contain the
information needed to generate the limit cards. This uses the baby ntuples
produced by Ben to create the efficiency and up/dn efficiencies used for the
systematic uncertainties. You must run this at least one time before you can
create cards. To run, use the "stop_interp_plots" executable that is generated
from bin/stop_interp_plots.cc which accepts a python parameter set file. Unless
you need to modify these parameters, the default pset should be fine:

[rwk7t@tensor StopCombination]$  stop_interp_plots pset/stop_t2tt.py 

The output should look like:

[stop_interp_plots] running with the following inputs:
max_events                = -1
lumi                      = 19.5
sample_name               = t2tt
xsec_file_path            = /Users/rwk7t/Development/CMSSW_6_1_2_Analysis2/src/Analysis/StopCombination/data/stop_xsec.root
xsec_hist_name            = h_stop_xsec
verbose                   = 0
suffix                    = 
mass_stop                 = -1
mass_lsp                  = -1
unc_lumi                  = 0.044
unc_trig                  = 0.030
unc_lept                  = 0.050
SR(s)                     = 0, 1, 2, 3, 4, 5, 6
[rt::PrintFilesFromTChain]:
t	# entries:  3903602
  /nfs-7/userdata/rwkelley/babies/stop/cms2V05-03-26_stoplooperV00-02-24/T2tt_mad/minibaby_V00-03-06/Skim_4jets_MET100_MT120/merged_T2tt_mStop-150to350_mLSP-0to250.root
  /nfs-7/userdata/rwkelley/babies/stop/cms2V05-03-26_stoplooperV00-02-24/T2tt_mad/minibaby_V00-03-06/Skim_4jets_MET100_MT120/merged_T2tt_mStop-150to475_mLSP-1.root
  /nfs-7/userdata/rwkelley/babies/stop/cms2V05-03-26_stoplooperV00-02-24/T2tt_mad/minibaby_V00-03-06/Skim_4jets_MET100_MT120/merged_T2tt_mStop-375to475_mLSP-0to375.root
  /nfs-7/userdata/rwkelley/babies/stop/cms2V05-03-26_stoplooperV00-02-24/T2tt_mad/minibaby_V00-03-06/Skim_4jets_MET100_MT120/merged_T2tt_mStop-500to650_mLSP-0to225.root
  /nfs-7/userdata/rwkelley/babies/stop/cms2V05-03-26_stoplooperV00-02-24/T2tt_mad/minibaby_V00-03-06/Skim_4jets_MET100_MT120/merged_T2tt_mStop-500to650_mLSP-250to550.root
  /nfs-7/userdata/rwkelley/babies/stop/cms2V05-03-26_stoplooperV00-02-24/T2tt_mad/minibaby_V00-03-06/Skim_4jets_MET100_MT120/merged_T2tt_mStop-500to800_mLSP-1.root
  /nfs-7/userdata/rwkelley/babies/stop/cms2V05-03-26_stoplooperV00-02-24/T2tt_mad/minibaby_V00-03-06/Skim_4jets_MET100_MT120/merged_T2tt_mStop-675to800_mLSP-0to275.root
  /nfs-7/userdata/rwkelley/babies/stop/cms2V05-03-26_stoplooperV00-02-24/T2tt_mad/minibaby_V00-03-06/Skim_4jets_MET100_MT120/merged_T2tt_mStop-675to800_mLSP-300to700.root
  /nfs-7/userdata/rwkelley/babies/stop/cms2V05-03-26_stoplooperV00-02-25/T2tt_mad/minibabies_V00-03-12/Skim_4jets_MET100_MT120/merged_T2tt_mStop-100to200_mLSP-1to100_LeptonFilt.root
  /nfs-7/userdata/rwkelley/babies/stop/cms2V05-03-26_stoplooperV00-02-25/T2tt_mad/minibabies_V00-03-12/Skim_4jets_MET100_MT120/merged_T2tt_mStop-225to350_mLSP-25to250_lepFilter.root
 ---> 100.0% <---
[InterpLooper::ScanChain] 3903602 Events Processed
------------------------------
CPU  Time: 54.4
Real Time: 54.4

The file generated contains the following histograms:

  KEY: TH2F    h_den        # Generated with scale1fb*lumi
  KEY: TH2F    h_scale1fb   Scale1fb Histogram
  KEY: TH1F    h_xsec       Cross Section #tilde{t} Pair Production
 
and for each signal region:

  KEY: TH2F    h_eff_<sr>           Efficiency with scale1fb*lumi 
  KEY: TH2F    h_eff_perc_<sr>      Efficiency Percentage with scale1fb*lumi 
  KEY: TH2F    h_err_btag_<sr>      Uncertainy with scale1fb*lumi, BTAG+/- 
  KEY: TH2F    h_err_btagdn_<sr>    Uncertainy with scale1fb*lumi, BTAG- 
  KEY: TH2F    h_err_btagup_<sr>    Uncertainy with scale1fb*lumi, BTAG+ 
  KEY: TH2F    h_err_trig_<sr>      Uncertainy with scale1fb*lumi, TrigEff+/- 
  KEY: TH2F    h_err_jes_<sr>       Uncertainy with scale1fb*lumi, JES+/- 
  KEY: TH2F    h_err_jesdn_<sr>     Uncertainy with scale1fb*lumi, JES- 
  KEY: TH2F    h_err_jesup_<sr>     Uncertainy with scale1fb*lumi, JES+ 
  KEY: TH2F    h_err_lept_<sr>      Uncertainy with scale1fb*lumi, LepEff+/- 
  KEY: TH2F    h_err_leptdn_<sr>    Uncertainy with scale1fb*lumi, LepEff- 
  KEY: TH2F    h_err_leptup_<sr>    Uncertainy with scale1fb*lumi, LepEff+ 
  KEY: TH2F    h_err_lumi_<sr>      Uncertainy with scale1fb*lumi, Lumi+/- 
  KEY: TH2F    h_err_noisr_<sr>     Uncertainy with scale1fb*lumi, ISR 
  KEY: TH2F    h_err_stats_<sr>     Uncertainy with scale1fb*lumi, Statistical 
  KEY: TH2F    h_err_total_<sr>     Uncertainy with scale1fb*lumi, Total 
  KEY: TH2F    h_nevt_<sr>          # Raw Count Passing 
  KEY: TH2F    h_num_noisr_<sr>     # Passing with scale1fb*lumi, ISR 
  KEY: TH2F    h_num_leptup_<sr>    # Passing with scale1fb*lumi, LepEff+ 
  KEY: TH2F    h_num_leptdn_<sr>    # Passing with scale1fb*lumi, LepEff- 
  KEY: TH2F    h_num_<sr>           # Passing with scale1fb*lumi 
  KEY: TH2F    h_num_btagdn_<sr>    # Passing with scale1fb*lumi, BTAG- 
  KEY: TH2F    h_num_btagup_<sr>    # Passing with scale1fb*lumi, BTAG+ 
  KEY: TH2F    h_num_jesdn_<sr>     # Passing with scale1fb*lumi, JES- 
  KEY: TH2F    h_num_jesup_<sr>     # Passing with scale1fb*lumi, JES+ 

--------------------------------------------------------------------------------
3. Create the Single Lepton Cards
--------------------------------------------------------------------------------

Once you have the "interpretation" histograms created (previous step), you
can generate an individual card using the exectuable "stop_create_card". The
available options are:

[rwk7t@tensor StopCombination]$  stop_create_card --help
Allowed options:
  --help                print this menu
  --interp arg          REQUIRED: file to get the signal yields and systematics
  --sample arg          REQUIRED: sample to run on
  --mass_stop arg       REQUIRED: mass stop value
  --mass_lsp arg        REQUIRED: mass lsp value
  --sr arg              REQUIRED: SRs to run on
  --method arg          Method:
                        1: the background and signal systematics are fully 
                        factorized into componenents.
                        2: the background systematic is combined into one 
                        number and signal systematics are factorized into 
                        componenents.
                        3: the background systematic and signal systematics are
                        combined into one number (what was originally used).
                        4: the background and signal systematics are fully 
                        factorized into componenents and the card is formatted 
                        for Higg's Combine.
  --output arg          name of output file (blank = stdout)
  --lumi arg            luminosity in fb^-1, default=19.5
  --verbose arg         verbosity, default=false

See the following example:

[rwk7t@tensor StopCombination]$  stop_create_card --sample t2tt --interp plots/interp/v0/t2tt_hists.root --mass_stop 600 --mass_lsp 150 --method 4 --sr 5
imax 1 number of search regions
jmax 4  number of backgrounds ('*' = automatic)
kmax 10 number of nuisance parameters (sources of systematical uncertainties)
------------
shapes * bdt4 FAKE
------------
       bin      bdt4
observation     2
------------
bin                     bdt4        bdt4        bdt4        bdt4        bdt4        
process                 signal      ttdil       ttslo       wjets       rare  
process                 0           1           2           3           4     
rate                    5.1539e+00  0.3         0.8         0.8         1.0   
### Error Matrix
------------
ttdil_1lep       lnN    -           2.000       -           -           -     
ttslo_1lep       lnN    -           -           2.125       -           -     
wjets_1lep       lnN    -           -           -           1.375       -     
rare_1lep        lnN    -           -           -           -           1.500 
trig_1lep        lnN    1.030       -           -           -           -     
lep              lnN    0.950/1.050 -           -           -           -     
Isr              lnN    1.064       -           -           -           -     
Btag             lnN    0.974/1.007 -           -           -           -     
Jes              lnN    0.930/1.059 -           -           -           -     
lumi             lnN    1.044       -           -           -           -     

Some comments:

1. The interpretation hists don't change with different samples. You can use
the "plots/interp/v0/t2tt_hists.root" from the previous section for all samples
since the difference between samples is merely a branching ratio which is
stored in the Sample::Info (in src/Samples.cc).

2. There are 4 methods to create cards since there was some study of the
different ways to factorize the uncertainties. The available methods are in the
description from using the "--help" option.

In order to mass produce the 

--------------------------------------------------------------------------------
4. Create all the Single Lepton Cards
--------------------------------------------------------------------------------

A wrapper python script can be used to generate the leptons cards over the
whole plane and for each signal region: scripts/stop_create_onelep_cards.py

python scripts/stop_create_onlep_cards.py 

The defaults are the values needed for higg's combine.

[rwk7t@tensor StopCombination]$  ./scripts/stop_create_onlep_cards.py --help
Usage: stop_create_onlep_cards.py [options]

Options:
  -h, --help            show this help message and exit
  --onelep_cards=ONELEP_PATH
                        path to the single lepton cards
  --sample=SAMPLE       sample (default t2tt)
  --mass_stop=MASS_STOP
                        mass stop (-1 means full plane)
  --mass_lsp=MASS_LSP   mass LSP (-1 means full plane)
  --interp_file=INTERP_FILE
                        file containing eff and systematics
  --method=METHOD       method to use (default is 4)

--------------------------------------------------------------------------------
5. Create the Combined Stop Cards
--------------------------------------------------------------------------------

To combine with razor cards, the original razor cards and associated ROOT
files have been checked into the repository under cards/t2tt/razor/. You can
combine them with combineCards.py that ships with Higg's combine. I have
written a wrapper script to add up all the cards need for the combination:
scripts/stop_create_combined_cards.py

Available options are:

rwk7t@tensor StopCombination]$  ./scripts/stop_create_combined_cards.py --help
Usage: stop_create_combined_cards.py [options]

Options:
  -h, --help            show this help message and exit
  --onelep_cards=ONELEP_PATH
                        path to the single lepton cards
  --razor_cards=RAZOR_PATH
                        path to the razor cards
  --combine_cards=COMBINED_PATH
                        path to the combined lepton cards
  --sr_filename=SR_FILENAME
                        path to the onelep best SR histogram
  --sr_histname=SR_HISTNAME
                        name of the onelep best SR histogram
  --sample=SAMPLE       sample (default t2tt)
  --mass_stop=MASS_STOP
                        mass stop (-1 means full plane)
  --mass_lsp=MASS_LSP   mass LSP (-1 means full plane)

The sr_filename and sr_histname options are used to specify a ROOT file and
histogram that designates the "best" signal region for that mass point. Only
the combined card for this point is created.

Presumably at this point, you have all the cards you need for all 3 possibilities

	1. single lepton
	2. razor
	3. combination

all in the same folder given by the combine_cards option.

--------------------------------------------------------------------------------
6. run the cards interactively
--------------------------------------------------------------------------------

You run the cards individually using the higg's combine on the command line. In
order to keep track of the options and do the "hybrid new" which takes multiple
steps, a wrapper python script can be used: scripts/stop_produce_limit.py

Available options are:

[rwk7t@tensor StopCombination]$  ./scripts/stop_produce_limit.py --help
Usage: stop_produce_limit.py [options]

Options:
  -h, --help       show this help message and exit
  --card=CARD      card to run on
  --method=METHOD  method -- 1: asymptotic, 2: hybrid no grid, 3: hybrid with
                   grid
  --ngrid=NGRID    number of points on the grid (method 3 only)
  --seed=SEED      seed for the combine job

NOTE: this is the same script that is run on the grid in then next setp.

Example:



--------------------------------------------------------------------------------
7. run the cards on the grid
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
8. extracting the limits from the grid output
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
8. creating exclusion plots
--------------------------------------------------------------------------------
